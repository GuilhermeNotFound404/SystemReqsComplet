unit Venda;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.ListView.Types, FMX.ListView.Appearances, FMX.ListView.Adapters.Base,
  FMX.StdCtrls, FMX.Edit, FMX.Controls.Presentation, FMX.ListView,
  FMX.TabControl, FMX.Layouts, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, FMX.DateTimeCtrls;

type
  TForm6 = class(TForm)
    Layout2: TLayout;
    TabControl1: TTabControl;
    TabItem1: TTabItem;
    ListView1: TListView;
    TabItem2: TTabItem;
    Gravar: TButton;
    Button2: TButton;
    ToolBar1: TToolBar;
    Layout1: TLayout;
    searchEdit: TEdit;
    addNewTypeButton: TButton;
    searchButton: TButton;
    backButton: TButton;
    searchLabel: TLabel;
    Layout3: TLayout;
    Label1: TLabel;
    Layout4: TLayout;
    EditQuantidade: TEdit;
    Label2: TLabel;
    Layout5: TLayout;
    EditSubTotal: TEdit;
    Label3: TLabel;
    Layout7: TLayout;
    EditClienteID: TEdit;
    Label5: TLabel;
    Button1: TButton;
    FDQuery1: TFDQuery;
    Layout8: TLayout;
    EditProdutoID: TEdit;
    Label6: TLabel;
    Button3: TButton;
    EditData: TDateEdit;
    procedure FormShow(Sender: TObject);
    procedure CarregarLista;
    procedure addNewTypeButtonClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure backButtonClick(Sender: TObject);
    procedure GravarClick(Sender: TObject);
    procedure ListView1ItemClickEx(const Sender: TObject; ItemIndex: Integer;
      const [Ref] LocalClickPos: TPointF; const ItemObject: TListItemDrawable);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure EditQuantidadeTyping(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form6: TForm6;
  acao: Char;
  id: Integer;

implementation

{$R *.fmx}

uses Menu, Tipo, Marca, Cliente, Product;

procedure TForm6.FormShow(Sender: TObject);
begin
  TabItem2.Enabled := False;
  addNewTypeButton.Enabled := True;
  TabControl1.ActiveTab := TabItem1;

  Menu.Form1.FDConnection1.Connected := True;
  CarregarLista;
end;

procedure TForm6.GravarClick(Sender: TObject);
var qrySalvar: TFDQuery;
begin
  try
    qrySalvar := TFDQuery.Create(Nil);
    qrySalvar.Connection := Form1.FDConnection1;
    qrySalvar.SQL.Clear;

    if acao = 'I' then
    begin
      qrySalvar.SQL.Add('INSERT INTO Venda (data, produto, subtotal ,cliente) VALUES (:data, :produto, :subtotal, :cliente)');
      qrySalvar.ParamByName('data').AsDate := EditData.Date;
      qrySalvar.ParamByName('produto').AsFloat := StrToFloat(EditProdutoID.Text);
      qrySalvar.ParamByName('subtotal').AsInteger := StrToIntDef(EditSubTotal.Text, 0);
      qrySalvar.ParamByName('cliente').AsInteger:= StrTointDef(EditClienteID.Text,0);
      qrySalvar.ParamByName('quantidade').AsInteger:= StrTointDef(EditQuantidade.Text,0);

      qrySalvar.ExecSQL;

      EditData.Date := 0.0;
      EditClienteID.Text := '';
      EditProdutoID.Text := '';
      EditQuantidade.Text := '';
      EditSubTotal.Text := '';


      CarregarLista;
      TabItem1.Enabled := True;
      TabControl1.ActiveTab := TabItem1;
      addNewTypeButton.Enabled := True;
    end
    else if acao = 'A' then
    begin
      qrySalvar.SQL.Add('UPDATE Venda SET data = :data, produto = :produto, subtotal = :subtotal, cliente = :cliente WHERE id = :id');
      qrySalvar.ParamByName('id').AsInteger := id;
      qrySalvar.ParamByName('data').AsDate := EditData.Date;
      qrySalvar.ParamByName('produto').AsFloat := StrToFloat(EditProdutoID.Text);
      qrySalvar.ParamByName('subtotal').AsInteger := StrToIntDef(EditSubTotal.Text, 0);
      qrySalvar.ParamByName('cliente').AsInteger:= StrTointDef(EditClienteID.Text,0);
      qrySalvar.ParamByName('quantidade').AsInteger:= StrTointDef(EditQuantidade.Text,0);
      qrySalvar.ExecSQL;

      ShowMessage('Alterado com sucesso!');
      CarregarLista;
      TabControl1.ActiveTab := TabItem1;
      TabItem1.Enabled := True;
      TabItem2.Enabled := False;
      addNewTypeButton.Enabled := True;
    end;

  except
    on e: Exception do
  begin
    ShowMessage(e.Message);
  end;
  end;

  acao := 'I';
  TabItem2.Enabled := False;
end;


procedure TForm6.ListView1ItemClickEx(const Sender: TObject; ItemIndex: Integer;
  const [Ref] LocalClickPos: TPointF; const ItemObject: TListItemDrawable);
  var
    qryCarregar: TFDQuery;
begin
  if LocalClickPos.X >= TListView (Sender).Width - 65 then
  begin
    qryCarregar := TFDQuery.Create(nil);
    qryCarregar.Connection := Form1.FDConnection1;
    qryCarregar.SQL.Clear;

    qryCarregar.SQL.Add('SELECT * FROM Venda WHERE id = :id');
    qryCarregar.ParamByName('id').AsInteger := StrToIntDef(ListView1.Items[ItemIndex].Detail, 0);
    qryCarregar.Open();

      if qryCarregar.RecordCount > 0 then
      begin
        acao := 'A';
        id := qryCarregar.FieldByName('id').AsInteger;
        EditData.Text := qryCarregar.FieldByName('data').AsString;
        EditClienteID.Text := qryCarregar.FieldByName('cliente').AsString;
        EditProdutoID.Text := qryCarregar.FieldByName('produto').AsString;
        EditQuantidade.Text := qryCarregar.FieldByName('quantidade').AsString;
        EditSubTotal.Text := qryCarregar.FieldByName('subtotal').AsString;
        TabItem2.Enabled := True;
        TabControl1.ActiveTab := TabItem2;
      end;
  end;
end;

procedure TForm6.addNewTypeButtonClick(Sender: TObject);
begin
  TabControl1.ActiveTab := TabItem2;
  acao := 'I';
  addNewTypeButton.Enabled := false;
  TabItem1.Enabled := false;
  TabItem2.Enabled := true;
  EditData.Text := '';
  EditClienteID.Text :='';
  EditProdutoID.Text := '';
  EditQuantidade.Text := '';
  EditSubTotal.Text := '';
end;

procedure TForm6.backButtonClick(Sender: TObject);
begin
  acao := 'A';
  Close;
end;

procedure TForm6.Button1Click(Sender: TObject);
begin
  Cliente.acao := 'B';
  Cliente.Form3.Show;
end;

procedure TForm6.Button2Click(Sender: TObject);
var
  qryDelete: TFDQuery;
begin
  try
    qryDelete := TFDQuery.Create(nil);
    qryDelete.Connection := Form1.FDConnection1;
    qryDelete.SQL.Clear;
    qryDelete.SQL.Add('DELETE FROM Venda WHERE id = :id');
    qryDelete.ParamByName('id').AsInteger := id;
    qryDelete.ExecSQL;

    ShowMessage('Deletado com sucesso!');
    CarregarLista;
    TabControl1.ActiveTab := TabItem1;
    TabItem1.Enabled := True;
    TabItem2.Enabled := False;
    addNewTypeButton.Enabled := True;
  except
    on e: Exception do
  begin
    ShowMessage(e.Message);
  end;
  end;
end;

procedure TForm6.Button3Click(Sender: TObject);
begin
  Product.acao := 'B';
  Product.Form5.Show;
end;

procedure TForm6.CarregarLista;
var
  qryLista: TFDQuery;
  AddItem: TListViewItem;
begin
  try
    qryLista := TFDQuery.Create(Nil);
    qryLista.Connection := Form1.FDConnection1;
    qryLista.SQL.Clear;
    qryLista.SQL.Add('Select * from Venda');
    qryLista.Open();
    qryLista.First;
    ListView1.Items.Clear;
    while not qryLista.Eof do
    begin
      AddItem := ListView1.Items.Add;
      AddItem.Detail:= qryLista.FieldByName('id').AsString;
      AddItem.Text:= qryLista.FieldByName('id').AsString + ' - ' + qryLista.FieldByName('data').AsString;
      qryLista.Next;
    end;

    qryLista.Close;
    qryLista.Free;

  except
    on e: Exception do
  begin
    ShowMessage(e.Message);
  end;

  end;
end;

//procedure TForm6.EditQuantidadeChange(Sender: TObject);
//var
//    qryCarregar: TFDQuery;
//begin
//
//  qryCarregar := TFDQuery.Create(nil);
//  qryCarregar.Connection := Form1.FDConnection1;
//  qryCarregar.SQL.Clear;
//
//  qryCarregar.SQL.Add('SELECT * FROM Produto WHERE id = :id');
//  qryCarregar.ParamByName('id').AsInteger := StrToIntDef(EditProdutoID.Text, 0);
//  qryCarregar.Open();
//
//  EditSubTotal.Text := FloatToStr(qryCarregar.FieldByName('preco').AsFloat * StrToIntDef(EditQuantidade.Text, 0));
//end;

//procedure TForm6.EditQuantidadeChange(Sender: TObject);
//  var
//    qryCarregar: TFDQuery;
//begin
//
//  qryCarregar := TFDQuery.Create(nil);
//  qryCarregar.Connection := Form1.FDConnection1;
//  qryCarregar.SQL.Clear;
//
//  qryCarregar.SQL.Add('SELECT * FROM Produto WHERE id = :id');
//  qryCarregar.ParamByName('id').AsInteger := StrToIntDef(EditProdutoID.Text, 0);
//  qryCarregar.Open();
//
//  EditSubTotal.Text := FloatToStr(qryCarregar.FieldByName('preco').AsFloat * StrToIntDef(EditQuantidade.Text, 0));
//end;

procedure TForm6.EditQuantidadeTyping(Sender: TObject);
  var
    qryCarregar: TFDQuery;
begin

  qryCarregar := TFDQuery.Create(nil);
  qryCarregar.Connection := Form1.FDConnection1;
  qryCarregar.SQL.Clear;

  qryCarregar.SQL.Add('SELECT * FROM Produto WHERE id = :id');
  qryCarregar.ParamByName('id').AsInteger := StrToIntDef(EditProdutoID.Text, 0);
  qryCarregar.Open();

  EditSubTotal.Text := FloatToStr(qryCarregar.FieldByName('preco').AsFloat * StrToIntDef(EditQuantidade.Text, 0));
end;

//procedure TForm6.EditQuantidadeKeyUp(Sender: TObject; var Key: Word;
//  var KeyChar: Char; Shift: TShiftState);
//  var
//    qryCarregar: TFDQuery;
//begin
//
//  qryCarregar := TFDQuery.Create(nil);
//  qryCarregar.Connection := Form1.FDConnection1;
//  qryCarregar.SQL.Clear;
//
//  qryCarregar.SQL.Add('SELECT * FROM Produto WHERE id = :id');
//  qryCarregar.ParamByName('id').AsInteger := StrToIntDef(EditProdutoID.Text, 0);
//  qryCarregar.Open();
//
//  EditSubTotal.Text := FloatToStr(qryCarregar.FieldByName('preco').AsFloat * StrToIntDef(EditQuantidade.Text, 0));
//end;

end.
